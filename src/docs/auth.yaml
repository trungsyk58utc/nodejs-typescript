servers:
  - url: http://localhost:4000
tags:
  - name: users
    description: Everything about users
paths:
  /api/auth/login:
    post:
      tags:
        - users
      summary: Login
      description: Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Return user information and token authentication information
  /api/auth/logout:
    post:
      tags:
        - users
      summary: Logout
      description: Logout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshToken'
      responses:
        '200':
          description: Return notification logout succesfully
  /api/auth/changePassword:
    post:
      tags:
        - users
      summary: Change password
      description: Change password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
      responses:
        '200':
          description: Return notification change password succesfully
      security:
        - BearerAuth: []
  /api/auth/refresh:
    post:
      tags:
        - users
      summary: Refresh Token
      description: Refresh Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshToken'
      responses:
        '200':
          description: Return new accessToken & RefreshToken
  /api/auth/register:
    post:
      tags:
        - users
      summary: Register
      description: Register an account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Return succesfully notification
  /api/auth/getMe:
    get:
      tags:
        - users
      summary: Get current user information
      description: Get current user information
      responses:
        '200':
          description: Return current user information
      security:
        - BearerAuth: []
  /api/auth/listUser:
    get:
      tags:
        - users
      summary: Get list user
      description: Get list user
      responses:
        '200':
          description: Return list user
      security:
        - BearerAuth: []
  /api/auth/getUser/{userId}:
    get:
      tags:
        - users
      summary: Get user by ID
      description: Get user by ID
      parameters:
        - name: userId
          in: path
          description: ID of user to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Return list user
      security:
        - BearerAuth: []
  
components:
  schemas:
    UserLogin:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    RefreshToken:
      type: object
      properties:
        refreshToken:
          type: string
    ChangePassword:
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
        confirmNewPassword:
          type: string